// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Rust = require("./Rust.bs.js");
var Hooks = require("./Hooks.bs.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var Localforage = require("localforage");

function getKeys(param) {
  return Localforage.keys();
}

function App$App(Props) {
  Props.config;
  var keys = Hooks.useLoading(getKeys);
  if (keys !== undefined) {
    return React.createElement("div", undefined, Belt_Array.map(keys, (function (key) {
                      return React.createElement("div", undefined, key);
                    })));
  } else {
    return React.createElement("div", undefined, "Loading");
  }
}

var App = /* module */[
  /* getKeys */getKeys,
  /* make */App$App
];

Rust.withModule((function (wasm) {
        wasm.run();
        var config = wasm.save();
        ReactDOMRe.renderToElementWithId(React.createElement(App$App, {
                  config: config
                }), "reason-root");
        console.log("Config we got", config);
        return /* () */0;
      }));

var x = 10;

exports.x = x;
exports.App = App;
/*  Not a pure module */
